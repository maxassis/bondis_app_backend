// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  UserData      UserData?
  Participation Participation[]
  Task          Task[]

  @@map("users")
}

model UserData {
  id              String   @id @default(cuid())
  avatar_url      String?
  avatar_filename String?
  full_name       String?
  bio             String?  @db.Text
  gender          Gender?
  sport           Sport?
  birthDate       String?
  createdAt       DateTime @default(now())
  user            Users    @relation(fields: [usersId], references: [id], onDelete: Cascade)
  usersId         String   @unique

  @@map("userData")
}

model Desafio {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  location      Json            @db.Json
  participation Participation[]

  @@map("desafio")
}

model Participation {
  id        Int     @id @default(autoincrement())
  userId    String
  desafioId Int
  progress  Decimal @default(0) @db.Decimal(10, 3)
  tasks     Task[]
  user      Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  desafio   Desafio @relation(fields: [desafioId], references: [id], onDelete: Cascade)

  @@map("participation")
}

model Task {
  id              Int           @id @default(autoincrement())
  name            String
  environment     Environment
  date            DateTime?     @db.Date
  duration        String?
  calories        Int?
  local           String?
  distanceKm      Decimal       @default(0) @db.Decimal(10, 3)
  participationId Int
  participation   Participation @relation(fields: [participationId], references: [id], onDelete: Cascade)
  Users           Users?        @relation(fields: [usersId], references: [id])
  usersId         String?

  @@map("tasks")
}

enum Gender {
  homem
  mulher
  nao_binario
  prefiro_nao_responder
}

enum Sport {
  corrida
  bicicleta
}

enum Environment {
  livre
  esteira
}
